# 1850
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Enkel Sample API

Resources:
  EnkelAPI:
    Type: AWS::Serverless::Api
    Properties:
      DefinitionBody:
        swagger: 2.0
        info:
          title: !Join [ "-", [ Ref: "AWS::StackName", "EnkelAPI" ] ]
        schemes:
        - https
        paths:
          /geohash:
            get:
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${geohash.Arn}/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
            options:
              consumes:
              - application/json
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: "#/definitions/Empty"
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
                    Access-Control-Allow-Headers:
                      type: string
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: 200
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
                      method.response.header.Access-Control-Allow-Headers: "'channel,Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token,x-strackid,region,language'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                passthroughBehavior: when_no_match
                requestTemplates:
                  application/json: "{\"statusCode\": 200}"
                type: mock
      StageName: LIVE

  geohash:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Join:
         - '-'
         - - Ref: AWS::StackName
           - geohash
      Handler: geohash.handler
      CodeUri: ./src
      Runtime: python3.7
      MemorySize: 128
      Timeout: 3
      Role: !GetAtt role.Arn
      Events:
        geohash:
          Type: Api
          Properties:
            Path: /geohash
            Method: get
            RestApiId: !Ref EnkelAPI
  
  role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

Outputs:
  API:
    Value: !Ref EnkelAPI.Stage